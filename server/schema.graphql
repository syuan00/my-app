scalar GraphQLDateTime

enum CategoryType {
  home 
  mark 
  read 
  folder
}

type Issue {
  user_id: String!
  id: Int!
  type: String!
  title: String
  link: String!
  summary: String
  summaryImage: String
  createdTime: GraphQLDateTime
  category: CategoryType # home mark read folder
  folder: String
  tags: String
  text: String
  snapshot: String
  noteText: String
  lastMotifiedTime: String
}

"Toned down Issue, used as inputs, without server generated values."
input IssueInputs {
  user_id: String
  link: String
  category: CategoryType = home
}

"""Inputs for issueUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""
input IssueUpdateInputs {
  title: String
  tags: String
  text: String
  snapshot: String
  noteText: String
}

##### Top level declarations
type Query {
  about: String!
  issueList(issue : IssueInputs): [Issue!]!
  issue(id: Int!): Issue!
}

type Mutation {
  setAboutMessage(message: String!): String
  issueAdd(issue: IssueInputs!): Issue!
  issueChangeCategory(issue: IssueInputs!):Issue!

  issueUpdate(id: Int!, changes: IssueUpdateInputs!): Issue!

  issueDelete(issue: IssueInputs!): Issue
  issueClearAll(issue: IssueInputs!): Issue
}
